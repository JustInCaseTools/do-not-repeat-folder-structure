name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Install pnpm
        run: |
          npm install -g pnpm
          pnpm config set store-dir ~/.pnpm-store

      - name: Cache pnpm store
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Update version in package.json
        if: github.ref_type == 'branch'
        run: |
          jq --arg build "$GITHUB_RUN_NUMBER" --arg commit "${GITHUB_SHA::8}" \
          '.version = .version + "-dev." + $build + "+" + $commit' package.json > package.json.tmp
          mv package.json.tmp package.json

      - name: Create release commit
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git checkout -b release-branch
          git add CHANGELOG.md package.json
          git commit -m "chore(release): $(jq -r .version package.json) [skip ci]"

      - name: Push changes to a new branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push origin release-branch

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: release-branch
          title: "Release $(jq -r .version package.json)"
          body: "This PR includes the changes for the new release."
          labels: release
          assignees: ${{ github.actor }}

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: pnpm run release
